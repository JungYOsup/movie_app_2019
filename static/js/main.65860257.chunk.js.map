{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movies","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","prototype","PropTypes","number","isRequired","string","arrayOf","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","class","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kVASA,SAASA,EAAT,GAA8D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAClD,OACE,yBAAKC,UAAU,SACb,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACXD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOL,UAAU,iBACvBI,OAIP,uBAAGJ,UAAU,kBAAkBH,KAMvCJ,EAAOc,UAAY,CACjBb,GAAIc,IAAUC,OAAOC,WACrBf,KAAMa,IAAUC,OAAOC,WACvBd,MAAOY,IAAUG,OAAOD,WACxBb,QAASW,IAAUG,OAAOD,WAC1BZ,OAAQU,IAAUG,OAAOD,WACzBX,OAAQS,IAAUI,QAAQJ,IAAUG,QAAQD,YAG/BjB,QC2BAoB,G,iNA1DbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAUAC,IAAMC,IACd,4DAXQ,gBAQEJ,EARF,EAORK,KACEA,KAAQL,OAMZ,EAAKM,SAAS,CACZN,SACAD,WAAW,IAhBH,2C,mFAqBVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAEnB,OACE,6BAASQ,MAAM,aACZT,EACC,yBAAKf,UAAU,UACb,0BAAMA,UAAU,eAAhB,iBAGF,yBAAKwB,MAAM,UACRR,EAAOb,KAAI,SAAAsB,GAAK,OACf,kBAAC,EAAD,CACEnB,IAAKmB,EAAM/B,GACXA,GAAI+B,EAAM/B,GACVC,KAAM8B,EAAM9B,KACZC,MAAO6B,EAAM7B,MACbC,QAAS4B,EAAM5B,QACfC,OAAQ2B,EAAMC,mBACd3B,OAAQ0B,EAAM1B,kB,GAjDZ4B,IAAMC,YCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.65860257.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\n//Movies.js 는 state가 필요 없기 때문에 class component로 선언해줄 필요가 없다.\r\n//why 필요가 없어?\r\n//class component는 state를 사용하기 위함이고, state는 보통 동적 데이터(변하는 데이터)와 함께 작업할때 만들어진다.\r\n//그런데 Movies.js는 데이터를 받기만 하지 그 데이터로 작업을 하지는 않으므로\r\n\r\nfunction Movies({ id, year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovies.prototype = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired //프로프타입이 String인 배열이 요구되어진다.\r\n};\r\n\r\nexport default Movies;\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./Movie.css\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  getMovies = async () => {\n    // async 함수를 비동기화 시킴 , 즉 이 함수는 순차적으로 진행되어야하는 함수야, 그래서 await를 한것을 다 기다린후에 함수를 실행시킬게~ 라는말이다.\n    //const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    //console.log(movies.data.data.movies); // 우리가 가져올 데이터는 movies.data.data.movies이다\n    //그러나 이런 예쁘지 않은 코딩은 Es6버전에서 새롭게 바뀌었다.\n\n    const {\n      data: {\n        data: { movies }\n      } //바로 ES6 기능으로 , movies.data.data.movies 가져옴 , movies안에 movies.data.data.movies가 담김\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    );\n\n    this.setState({\n      movies, // == movies: movies\n      isLoading: false\n    });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n\n    return (\n      <section class=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader_text\">\"Loading...\"</span>\n          </div>\n        ) : (\n          <div class=\"movies\">\n            {movies.map(movie => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}